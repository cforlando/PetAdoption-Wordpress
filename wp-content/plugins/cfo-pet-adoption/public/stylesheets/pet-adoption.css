/*	==================================================
	Pet View
	==================================================  */
.container-pet {
  display: -moz-inline-stack;
  display: inline-block;
  vertical-align: top;
  *vertical-align: auto;
  zoom: 1;
  *display: inline;
  width: 25em;
  min-width: 33.33333%;
  text-align: center; }
  .container-pet .wrap-pet-photo {
    display: -moz-inline-stack;
    display: inline-block;
    vertical-align: middle;
    *vertical-align: auto;
    zoom: 1;
    *display: inline;
    max-width: 12.5em;
    width: 100%;
    padding-bottom: 1em; }
  .container-pet .pet-photo {
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    border-radius: 50%;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    background-image: url("http://placehold.it/960x960");
    -webkit-background-image: url("http://placehold.it/960x960");
    -moz-background-image: url("http://placehold.it/960x960");
    -o-background-image: url("http://placehold.it/960x960");
    background-image: url("http://placehold.it/960x960");
    display: block;
    height: 0;
    margin: 0 auto;
    padding-bottom: 100%;
    position: relative;
    width: 100%;
    overflow: hidden;
    width: 100%; }
  .container-pet .pet-info p {
    margin: 0 auto; }
  .container-pet .wrap-pet-info-size,
  .container-pet .wrap-pet-info-sex,
  .container-pet .wrap-pet-info-breed {
    padding-bottom: 0.75em; }
  .container-pet .btn-more-info {
    background-color: #d8d8d8;
    border: 0;
    padding: 0.5em;
    text-decoration: none; }

/*	==================================================
	Pet List View
	==================================================  */
.wrap-search-results {
  text-align: center; }

/*	==================================================
	Search
	==================================================  */
.container-search {
  font-family: sans-serif; }
  .container-search,
  .container-search * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box; }
  .container-search .wrap-search-cta {
    background-color: #828282;
    padding: 0.75em 1.875%; }
  .container-search .search-cta {
    color: #fff;
    margin: 0 auto;
    text-align: center; }
  .container-search .wrap-search {
    font-family: sans-serif;
    background-color: #323232;
    color: #fff; }
  .container-search .wrap-image,
  .container-search .wrap-instructions,
  .container-search .wrap-search-fields {
    display: -moz-inline-stack;
    display: inline-block;
    vertical-align: middle;
    *vertical-align: auto;
    zoom: 1;
    *display: inline;
    padding: 1.5em 1.875%;
    width: 33.33333%; }
  .container-search .wrap-image {
    text-align: center; }
  .container-search .image {
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    border-radius: 50%;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    background-image: url("http://placehold.it/960x960");
    -webkit-background-image: url("http://placehold.it/960x960");
    -moz-background-image: url("http://placehold.it/960x960");
    -o-background-image: url("http://placehold.it/960x960");
    background-image: url("http://placehold.it/960x960");
    display: block;
    height: 0;
    margin: 0 auto;
    padding-bottom: 100%;
    position: relative;
    width: 100%;
    overflow: hidden;
    width: 100%; }
  .container-search .wrap-instructions {
    padding-left: 0;
    padding-right: 0; }
    .container-search .wrap-instructions h5 {
      margin: 0 auto .5em;
      text-align: center; }
  .container-search .search {
    display: -moz-inline-stack;
    display: inline-block;
    vertical-align: middle;
    *vertical-align: auto;
    zoom: 1;
    *display: inline;
    width: 100%; }
  .container-search .wrap-advanced-options-toggle {
    padding-bottom: 0.75em; }
  .container-search .advanced-options-toggle {
    background-color: #828282;
    color: #fff;
    display: block;
    padding: 0.75em;
    text-align: center; }
  .container-search .wrap-advance-options-view {
    -webkit-transition-property: max-height;
    -moz-transition-property: max-height;
    -o-transition-property: max-height;
    transition-property: max-height;
    -webkit-transition-duration: 400ms;
    -moz-transition-duration: 400ms;
    -o-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-timing-function: ease;
    -moz-transition-timing-function: ease;
    -o-transition-timing-function: ease;
    transition-timing-function: ease;
    max-height: 0;
    overflow: hidden; }
  .container-search .advanced-options-view {
    padding-bottom: 0.75em; }
  .container-search .wrap-input {
    padding-bottom: 0.75em; }
    .container-search .wrap-input:first-child {
      padding-top: 0; }
    .container-search .wrap-input:last-child {
      padding-bottom: 0; }
  .container-search select {
    background-color: #fff;
    border: 0;
    display: block;
    padding: 0.75em;
    text-align: center;
    width: 100%; }
  .container-search option {
    text-align: center; }
  .container-search input[type='submit'] {
    display: block;
    background-color: #828282;
    padding: 0.75em;
    text-align: center;
    width: 100%; }
  .container-search.advanced-view .wrap-advance-options-view {
    max-height: 45em;
    overflow: hidden; }
  @media (max-width: 768px) {
    .container-search .wrap-image,
    .container-search .wrap-instructions,
    .container-search .wrap-search-fields {
      display: block;
      padding: .75em 1.5em;
      width: 100%; }
    .container-search .wrap-image {
      padding-top: 1.5em; }
    .container-search .wrap-search-fields {
      padding: 0; } }

/*# sourceMappingURL=data:application/json;base64, */
